<?php

/**
 * Implementation of hook_action_info().
 */
function nodejs_actions_action_info() {

  return array(
    'realtime_taxonomy_action' => array(
      'description' => t('Publish realtime notifications of taxonomy activity.'),
      'type' => 'taxonomy',
      'configurable' => FALSE,
      'hooks' => array(
        'taxonomy' => array('insert', 'update', 'delete'),
      ),
    ),
    'realtime_comment_action' => array(
      'description' => t('Publish realtime notifications of comment activity.'),
      'type' => 'comment',
      'configurable' => FALSE,
      'hooks' => array(
        'comment' => array('insert', 'update', 'delete', 'view', 'validate', 'publish', 'unpublish'),
      ),
    ),                     
    'realtime_user_notification' => array(
      'description' => t('Publish realtime notifications of user activity.'),
      'type' => 'user',
      'configurable' => FALSE,
      'hooks' => array(
        'user' => array('login', 'logout', 'insert', 'delete', 'update', 'view'),
      )
    ),
    'realtime_node_notification' => array(
      'description' => t('Publish realtime notifications of node activity.'),
      'type' => 'node',
      'configurable' => FALSE,
      'hooks' => array(
        'nodeapi' => array('view', 'insert', 'update', 'delete'),
      )
    ),  
  );
}

function realtime_node_notification($context = array(), $op) {
  $user = $context->name;
  $link = l($context->title, 'node/' . $context->nid);
  $body = t('The user !user did %action a node !link', array('!user' => $user, '%action' => t($op['op']), '!link' => $link));
  nodejs_actions_enqueue_message(t('Node Activity'), $body);
}

function realtime_user_notification($comment, $context = array()) {
  $user = $context['form_values']['name'];
  $body = t('The user !user has %action.', array('!user' => $user, '%action' => t($context['op'])));
  nodejs_actions_enqueue_message(t('User Activity'), $body);
}

function realtime_taxonomy_action($comment, $context = array()) {
  $term = taxonomy_get_term(arg(3));
  $name = $term->name;
  $voc = taxonomy_vocabulary_load($term->vid);
  $vocabulary = $voc->name;
  $link = l($name, 'taxonomy/term/' . $term->tid);  
  $body = t('This term !link in the vocabulary !voca has been %action.', array('!link' => $link, '!voca' => $vocabulary, '%action' => t($context['op'])));
  nodejs_actions_enqueue_message(t('Taxonomy activity'), $body);
}

function realtime_comment_action($comment, $context = array()) {
  if (isset($comment->cid)) {
    $cid = $comment->cid;
    $subject = $comment->subject;
	$action = t($context['op']);		
  }
  else {
    $cid = $context['cid'];
    $subject = db_result(db_query("SELECT subject FROM {comments} WHERE cid = %d", $cid));
  }
  $link = l($comment->subject, 'node/' . $comment->nid, array('fragment' => 'comment-' . $comment->cid));
  $body = t('The User !name did %action a comment !link .', array('!name' => $comment['name'], '%action' => $action, '!link' => $link));

  nodejs_actions_enqueue_message($subject, $body);
}

/**
 * Helper function for enqueueing 'nodejs_notify' channel messages.
 *
 * @param mixed $subject
 * @param mixed $body
 */
 
function nodejs_actions_enqueue_message($subject, $body) {
  $message = (object) array(
    'broadcast' => TRUE,
    'data' => (object) array(
      'subject' => $subject,
      'body' => $body,
    ),
    'channel' => 'nodejs_notify',
  );

  nodejs_enqueue_message($message);
}

